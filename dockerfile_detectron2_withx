FROM nvidia/cuda:10.1-devel-ubuntu18.04

ENV TZ=US/Mountain
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
	ca-certificates git wget sudo ninja-build vim software-properties-common libglib2.0-0

RUN sudo add-apt-repository -y ppa:ubuntugis/ppa && \
    sudo apt update && \
    sudo apt install -y gdal-bin qgis 

RUN sudo apt install -y python3-dev python3-gdal python3-opencv && \
    pip3 install --upgrade pip
RUN pip3 install scikit-build numpy scipy matplotlib ipython shapely fiona geojson pandas scikit-image pyyaml tqdm albumentations
RUN pip3 install -U jedi==0.17.2 parso==0.7



#Only for maschenb:
RUN groupadd -r dglabs -g 4006
RUN useradd -u 902759 -r -g dglabs -d /home/maschenb -m -s /bin/bash -c "$USER user" maschenb

# create a non-root user
#ARG USER_ID=1000
#RUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
#USER appuser
USER maschenb
#WORKDIR /home/appuser

# Set a fixed model cache directory.
ENV FVCORE_CACHE="/tmp"
WORKDIR /home/maschenb

# install detectron2 dependencies
# See https://pytorch.org/ for other options if you use a different version of CUDA
RUN pip3 install --user tensorboard cmake   # cmake from apt-get is too old
RUN pip3 install --user torch==1.7.1 torchvision==0.8.2 -f https://download.pytorch.org/whl/cu101/torch_stable.html
RUN pip3 install --user 'git+https://github.com/facebookresearch/fvcore'

# install detectron2
RUN git clone https://github.com/facebookresearch/detectron2 /home/maschenb/detectron2_repo && \
    chmod -R 777 /home/maschenb/detectron2_repo
# set FORCE_CUDA because during `docker build` cuda is not accessible
ENV FORCE_CUDA="1"
# This will by default build detectron2 for all common cuda architectures and take a lot more time,
# because inside `docker build`, there is no way to tell which architecture will be used.
ARG TORCH_CUDA_ARCH_LIST="Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing"
ENV TORCH_CUDA_ARCH_LIST="${TORCH_CUDA_ARCH_LIST}"
RUN cd /home/maschenb && \
    pip3 install -e detectron2_repo







#ENV PATH="/home/maschenb/.local/bin:${PATH}"
#RUN wget https://bootstrap.pypa.io/get-pip3.py && \
#	python3 get-pip3.py --user && \
#	rm get-pip3.py


# run detectron2 under user "maschenb":
# wget http://images.cocodataset.org/val2017/000000439715.jpg -O input.jpg
# python3 demo/demo.py  \
	#--config-file configs/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x.yaml \
	#--input input.jpg --output outputs/ \
	#--opts MODEL.WEIGHTS detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
#sudo docker run -it --rm -u $USERID:$GROUPID -e USER=$USER -v /home/maschenb/.aws:/home/maschenb/.aws -v /mnt/tier1/:/mnt/tier1/ -v /mnt/tier2/:/mnt/tier2/  -v /mnt/tier3/:/mnt/tier3/ -v /mnt/tier4/:/mnt/tier4/ -v /mnt/tier5/:/mnt/tier5/ -v /mnt/panasas:/mnt/panasas --detach-keys="ctrl-q,i" --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --volume="$HOME/.Xauthority:/home/maschenb/.Xauthority:rw" --env="DISPLAY" --net=host mga_detectron2_withx
